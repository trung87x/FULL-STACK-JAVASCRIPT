🧠 Model 7: Truy cập database từ backend trong Next.js
--------------------------------------------------------
• Vai trò: Gọi CSDL từ các API route của Next.js.
• Controller:
  - Kết nối Prisma/MongoDB/PostgreSQL trong `lib/db.ts`.
  - Thực thi các truy vấn trong `app/api/.../route.ts`.

🌐 Ngữ cảnh #7: Tạo API `/api/products` lấy dữ liệu thật từ Prisma
--------------------------------------------------------------------
• Mục tiêu: Trả về danh sách sản phẩm từ cơ sở dữ liệu thay vì mock data.
• Yêu cầu: Cài Prisma, cấu hình schema, migrate DB.

📦 1. Cài đặt Prisma (nếu chưa có):

```bash
npm install prisma --save-dev
npx prisma init
```

🧩 2. Cấu hình schema Prisma (`prisma/schema.prisma`):

```prisma
model Product {
  id    Int    @id @default(autoincrement())
  name  String
  price Int
}
```

💾 3. Migrate và seed dữ liệu:

```bash
npx prisma migrate dev --name init
npx prisma studio   # để thêm sản phẩm bằng giao diện
```

🔌 4. Kết nối CSDL (`lib/prisma.ts`):

```ts
import { PrismaClient } from '@prisma/client'
const globalForPrisma = globalThis as unknown as {
  prisma: PrismaClient | undefined
}

export const prisma =
  globalForPrisma.prisma ??
  new PrismaClient({ log: ['query'] })

if (process.env.NODE_ENV !== 'production')
  globalForPrisma.prisma = prisma
```

📁 5. API route: `app/api/products/route.ts`

```ts
import { prisma } from '@/lib/prisma'
import { NextResponse } from 'next/server'

export async function GET() {
  const products = await prisma.product.findMany()
  return NextResponse.json(products)
}
```

🎯 Sử dụng:

- CSR: `fetch('/api/products')`
- SSR/SSG: `fetch('http://localhost:3000/api/products')`

✅ Kết quả:
- API `/api/products` trả danh sách từ database thật.
- Có thể mở rộng để thêm, xóa, sửa sản phẩm với `POST`, `PUT`, `DELETE`.

🧠 Ghi nhớ:
- Prisma giúp truy cập DB dễ dàng, type-safe trong Next.js.
- Tách kết nối Prisma vào `lib/` để tái sử dụng trong nhiều route.
- API trong Next.js có thể coi là một Express thu nhỏ.

📚 Gợi ý mở rộng:
- `POST`: tạo sản phẩm mới → dùng `request.json()`
- `DELETE`: xóa sản phẩm theo `id`
- `GET`: lấy chi tiết sản phẩm `/api/products/[id]`
