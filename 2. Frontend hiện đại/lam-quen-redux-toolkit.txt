📦 REDUX TOOLKIT — COUNTER APP

=======================================
📁 CẤU TRÚC THƯ MỤC
=======================================
redux-counter/
├── src/
│   ├── main.jsx
│   ├── App.jsx
│   └── redux/
│       ├── store.js
│       └── counterSlice.js
├── index.html
├── package.json
└── tailwind.config.js (nếu có)


=======================================
1. src/redux/counterSlice.js
=======================================

import { createSlice } from '@reduxjs/toolkit'

const counterSlice = createSlice({
  name: 'counter',
  initialState: {
    value: 0,
  },
  reducers: {
    increment: (state) => {
      state.value += 1
    },
    decrement: (state) => {
      state.value -= 1
    }
  }
})

export const { increment, decrement } = counterSlice.actions
export default counterSlice.reducer


=======================================
2. src/redux/store.js
=======================================

import { configureStore } from '@reduxjs/toolkit'
import counterReducer from './counterSlice'

const store = configureStore({
  reducer: {
    counter: counterReducer,
  },
})

export default store


=======================================
3. src/main.jsx
=======================================

import React from 'react'
import ReactDOM from 'react-dom/client'
import App from './App'
import { Provider } from 'react-redux'
import store from './redux/store'
import './index.css'

ReactDOM.createRoot(document.getElementById('root')).render(
  <React.StrictMode>
    <Provider store={store}>
      <App />
    </Provider>
  </React.StrictMode>,
)


=======================================
4. src/App.jsx
=======================================

import { useSelector, useDispatch } from 'react-redux'
import { increment, decrement } from './redux/counterSlice'

function App() {
  const count = useSelector((state) => state.counter.value)
  const dispatch = useDispatch()

  return (
    <div className="min-h-screen bg-gray-100 flex flex-col items-center justify-center">
      <h1 className="text-3xl font-bold mb-6">🔢 Counter App (Redux)</h1>
      <p className="text-5xl font-mono mb-4">{count}</p>
      <div className="space-x-4">
        <button
          onClick={() => dispatch(increment())}
          className="px-4 py-2 bg-green-600 text-white rounded"
        >
          ➕ Tăng
        </button>
        <button
          onClick={() => dispatch(decrement())}
          className="px-4 py-2 bg-red-600 text-white rounded"
        >
          ➖ Giảm
        </button>
      </div>
    </div>
  )
}

export default App


=======================================
📚 KỸ NĂNG ĐÃ HỌC
=======================================
✔ Redux: quản lý state toàn cục
✔ Redux Toolkit: tạo slice đơn giản
✔ configureStore: tạo store chính
✔ useSelector: đọc state
✔ useDispatch: gửi hành động
✔ Kết nối Provider vào React App

🎯 Đây là bước đệm để sau này bạn quản lý form, todo list, giỏ hàng, user login bằng Redux.
