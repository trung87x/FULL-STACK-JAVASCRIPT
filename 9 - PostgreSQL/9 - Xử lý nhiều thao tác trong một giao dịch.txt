# Ng·ªØ c·∫£nh 9: X·ª≠ l√Ω nhi·ªÅu thao t√°c trong m·ªôt giao d·ªãch (t·∫°o user + log + g·ª≠i mail)

üß† Model (√ù nghƒ©a d·ªØ li·ªáu & quan h·ªá)
- Giao d·ªãch (transaction) ƒë·∫£m b·∫£o **t√≠nh to√†n v·∫πn** v√† **atomicity**:
  - Nhi·ªÅu thao t√°c x·∫£y ra c√πng l√∫c.
  - N·∫øu 1 thao t√°c th·∫•t b·∫°i ‚Üí t·∫•t c·∫£ b·ªã hu·ª∑.
- V√≠ d·ª•: T·∫°o ng∆∞·ªùi d√πng ‚Üí Ghi log ‚Üí (G·ª≠i mail t·ª´ backend, gi·∫£ l·∫≠p).

üõ†Ô∏è Controller (SQL)

-- T·∫°o b·∫£ng users
CREATE TABLE users (
  id SERIAL PRIMARY KEY,
  name VARCHAR(100) NOT NULL,
  email VARCHAR(100) UNIQUE NOT NULL
);

-- T·∫°o b·∫£ng logs ƒë·ªÉ ghi l·ªãch s·ª≠ h√†nh ƒë·ªông
CREATE TABLE logs (
  id SERIAL PRIMARY KEY,
  action TEXT,
  created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP
);

-- Giao d·ªãch m·∫´u: t·∫°o user + ghi log
BEGIN;

-- B∆∞·ªõc 1: Th√™m ng∆∞·ªùi d√πng
INSERT INTO users (name, email)
VALUES ('Trung ƒêinh', 'trung@example.com');

-- B∆∞·ªõc 2: Ghi log
INSERT INTO logs (action)
VALUES ('T·∫°o ng∆∞·ªùi d√πng: Trung ƒêinh');

-- G·ª≠i mail gi·∫£ l·∫≠p (v√≠ d·ª• th·ª±c hi·ªán trong backend Node.js)
-- console.log("üìß ƒê√£ g·ª≠i email ƒë·∫øn trung@example.com")

-- N·∫øu m·ªçi th·ª© OK
COMMIT;

-- N·∫øu c√≥ l·ªói ·ªü b·∫•t k·ª≥ b∆∞·ªõc n√†o ‚Üí hu·ª∑ to√†n b·ªô
ROLLBACK;

üìò Ghi ch√∫:
- `BEGIN` ‚Üí b·∫Øt ƒë·∫ßu giao d·ªãch
- `COMMIT` ‚Üí x√°c nh·∫≠n giao d·ªãch th√†nh c√¥ng
- `ROLLBACK` ‚Üí hu·ª∑ giao d·ªãch n·∫øu c√≥ l·ªói
- Trong th·ª±c t·∫ø, x·ª≠ l√Ω backend s·∫Ω th·ª±c hi·ªán logic g·ª≠i mail, rollback khi g·∫∑p l·ªói ·ªü b∆∞·ªõc b·∫•t k·ª≥

