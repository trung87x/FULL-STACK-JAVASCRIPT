# Ng·ªØ c·∫£nh 10: D√πng Prisma/Sequelize ƒë·ªÉ qu·∫£n l√Ω schema v√† migrations

üß† Model (√ù nghƒ©a d·ªØ li·ªáu & quan h·ªá)
- S·ª≠ d·ª•ng ORM ƒë·ªÉ:
  - Qu·∫£n l√Ω c·∫•u tr√∫c b·∫£ng b·∫±ng m√£ ngu·ªìn (schema).
  - D·ªÖ d√†ng migrate database (t·∫°o b·∫£ng, s·ª≠a c·ªôt, rollback...).
  - T√°ch bi·ªát logic backend v·ªõi SQL thu·∫ßn.
- Hai c√¥ng c·ª• ph·ªï bi·∫øn: Prisma (modern) v√† Sequelize (truy·ªÅn th·ªëng).

üõ†Ô∏è Controller (ORM)

--- PRISMA ---

# 1. C√†i ƒë·∫∑t Prisma CLI v√† kh·ªüi t·∫°o
npm install prisma --save-dev
npx prisma init

# 2. C·∫•u h√¨nh file .env
DATABASE_URL="postgresql://user:password@localhost:5432/mydb"

# 3. ƒê·ªãnh nghƒ©a schema trong prisma/schema.prisma
model User {
  id        Int      @id @default(autoincrement())
  name      String
  email     String   @unique
  createdAt DateTime @default(now())
}

# 4. T·∫°o migration v√† ƒë·∫©y schema v√†o DB
npx prisma migrate dev --name init

# 5. T·∫°o d·ªØ li·ªáu m·∫´u (seed.ts)
import { PrismaClient } from '@prisma/client'
const prisma = new PrismaClient()

async function main() {
  await prisma.user.create({
    data: { name: 'Trung', email: 'trung@example.com' },
  });
}
main();

--- SEQUELIZE ---

# 1. C√†i ƒë·∫∑t Sequelize CLI
npm install sequelize sequelize-cli pg pg-hstore
npx sequelize init

# 2. T·∫°o model + migration
npx sequelize model:generate --name User --attributes name:string,email:string

# 3. Ch·ªânh s·ª≠a file migration (add constraints)
email: {
  type: Sequelize.STRING,
  allowNull: false,
  unique: true
},
name: {
  type: Sequelize.STRING,
  allowNull: false
}

# 4. Ch·∫°y migration
npx sequelize db:migrate

# 5. Seed d·ªØ li·ªáu
npx sequelize seed:generate --name demo-user
# Ch·ªânh file seed v√† ch·∫°y:
npx sequelize db:seed:all

üìò Ghi ch√∫:
- Prisma: h∆∞·ªõng schema-first, d·ªÖ t√≠ch h·ª£p TypeScript
- Sequelize: h∆∞·ªõng migration-first, quen thu·ªôc v·ªõi dev Node.js truy·ªÅn th·ªëng
- Migration gi√∫p:
  + Version ho√° database (qu·∫£n l√Ω l·ªãch s·ª≠ thay ƒë·ªïi)
  + D·ªÖ rollback, t√°i t·∫°o schema khi c·∫ßn
  + Qu·∫£n l√Ω production DB an to√†n v√† minh b·∫°ch

