// ==========================
// üß† Model 7: B·∫Øt l·ªói logic t·ª´ s·ªõm (compile time)
// M·ª•c ti√™u: Ph√°t hi·ªán l·ªói s·ªõm khi l·∫≠p tr√¨nh thay v√¨ khi ch·∫°y ·ª©ng d·ª•ng
// ==========================

// Ng·ªØ c·∫£nh: Truy·ªÅn d·ªØ li·ªáu gi·ªØa c√°c ph·∫ßn trong h·ªá th·ªëng

type User = {
  id: string;
  name: string;
  age: number;
};

// H√†m x·ª≠ l√Ω d·ªØ li·ªáu ng∆∞·ªùi d√πng
function printUser(user: User): void {
  console.log(`ID: ${user.id}, T√™n: ${user.name}, Tu·ªïi: ${user.age}`);
}

// ‚úÖ Truy·ªÅn ƒë√∫ng ki·ªÉu
const u1 = { id: '001', name: 'Trung', age: 28 };
printUser(u1);

// ‚ùå Thi·∫øu thu·ªôc t√≠nh s·∫Ω b√°o l·ªói ngay khi bi√™n d·ªãch
/*
const u2 = { id: '002', name: 'Minh' }; // thi·∫øu age
printUser(u2); // ‚õî l·ªói compile time
*/

// ‚ùå Sai ki·ªÉu d·ªØ li·ªáu c≈©ng b√°o l·ªói
/*
const u3 = { id: '003', name: 'Linh', age: 'hai lƒÉm' }; // age sai ki·ªÉu
printUser(u3); // ‚õî l·ªói compile time
*/

// ==========================
// Ng·ªØ c·∫£nh: React component nh·∫≠n props

type ProfileProps = {
  username: string;
  age: number;
};

const Profile = (props: ProfileProps) => {
  return (
    <div>
      <p>{props.username}</p>
      <p>{props.age} tu·ªïi</p>
    </div>
  );
};

// ‚úÖ D√πng ƒë√∫ng props
<Profile username="Alice" age={22} />;

// ‚ùå Truy·ªÅn thi·∫øu props ho·∫∑c sai ki·ªÉu => b√°o l·ªói ngay
/*
<Profile username="Bob" /> // ‚õî thi·∫øu age
<Profile username="Bob" age="hai m∆∞∆°i" /> // ‚õî sai ki·ªÉu age
*/

// ==========================
// Ng·ªØ c·∫£nh: Switch case kh√¥ng ƒë·∫ßy ƒë·ªß => ph√°t hi·ªán thi·∫øu x·ª≠ l√Ω

type Shape = { type: 'circle'; radius: number } | { type: 'square'; side: number };

function getArea(shape: Shape): number {
  switch (shape.type) {
    case 'circle':
      return Math.PI * shape.radius ** 2;
    // ‚ùå qu√™n x·ª≠ l√Ω 'square' => TypeScript s·∫Ω c·∫£nh b√°o n·∫øu d√πng exhaustive check
    default:
      const _exhaustive: never = shape; // ‚õî b√°o l·ªói n·∫øu c√≤n case ch∆∞a x·ª≠ l√Ω
      return _exhaustive;
  }
}
