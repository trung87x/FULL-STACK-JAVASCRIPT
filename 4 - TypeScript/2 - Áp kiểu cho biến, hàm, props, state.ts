// ==========================
// üß† Model 2: √Åp ki·ªÉu cho bi·∫øn, h√†m, props, state
// M·ª•c ti√™u: ƒê·∫£m b·∫£o bi·∫øn, h√†m, props, state c√≥ ki·ªÉu r√µ r√†ng ƒë·ªÉ tr√°nh l·ªói khi truy·ªÅn v√† nh·∫≠n d·ªØ li·ªáu
// ==========================

// Ng·ªØ c·∫£nh: X√¢y d·ª±ng h√†m t√≠nh thu·∫ø thu nh·∫≠p cho nh√¢n vi√™n

// √Åp ki·ªÉu cho bi·∫øn
let salary: number = 1000;
let employeeName: string = 'Alice';
let isActive: boolean = true;

// √Åp ki·ªÉu cho h√†m
function calculateTax(income: number, rate: number): number {
  return income * rate;
}

const tax = calculateTax(salary, 0.1); // tax: number

// ==========================
// Trong React: √Åp ki·ªÉu cho props v√† state
// ==========================

import React, { useState } from 'react';

// Ki·ªÉu d·ªØ li·ªáu cho props
type UserProps = {
  name: string;
  age: number;
};

const UserCard: React.FC<UserProps> = ({ name, age }) => {
  return (
    <div>
      <h3>{name}</h3>
      <p>{age} tu·ªïi</p>
    </div>
  );
};

// √Åp ki·ªÉu cho state
const Counter = () => {
  const [count, setCount] = useState<number>(0);

  const increment = (): void => {
    setCount(count + 1);
  };

  return (
    <div>
      <p>Count: {count}</p>
      <button onClick={increment}>TƒÉng</button>
    </div>
  );
};
